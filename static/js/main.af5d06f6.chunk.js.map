{"version":3,"sources":["articles.js","CardComponent.js","PageNavComponent.js","App.js","serviceWorker.js","index.js"],"names":["articles","id","author","title","content","CardComponent","react_default","a","createElement","className","this","props","React","Component","PageNavComponent","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","current","currentButtons","getInitialButtons","handleClick","bind","assertThisInitialized","incrementButton","decrementButton","numOfButtons","Math","floor","numOfArticles","articlesPerPage","buttonNums","getNumOfButtons","push","i","buttonIndex","isSelected","_this2","key","onClick","lastArticleIndex","updatedCurrentButtons","fifthToLast","setState","map","x","updatedCurrent","_this3","navButtons","forEach","index","createButton","App","length","firstArticleIndex","updateArticles","lastIndex","cards","slice","article","src_CardComponent_0","src_PageNavComponent","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.af5d06f6.chunk.js","sourcesContent":["const articles = [\n    {\n        id: 1,\n        author: \"Marco\",\n        title: \"Why you should be using React\",\n        content: \"Lorem ipsum dolor sit amet consectetur adipisicing elit.\" +\n        \"Facilis est reprehenderit cupiditate cbus, aut dolor molestiae tempor\" +\n        \"Facilis est reprehenderit cupiditate consequatur totam officiis tempor\" +\n        \"Facilis bus, aut dolor molestiae consequatur totam officiis tempor\" +\n        \"Facilis est reprehenderit cupiditate consequatur totam officiis tempor\" +\n        \"dolores molestias alias.Voluptatibus, aut dolor molestiae ullam accusantium\" +\n        \"error atque veniam libero obcaecati!\"\n    },\n    {\n        id: 2,\n        author: \"Bill\",\n        title: \"The world is coming to an end!\",\n        content: \"Lorem ipsum dolor sit amet consectetur adipisicing elit.\" +\n        \"Facilis est reprehenderit cupiditate cbus, aut dolor molestiae tempor\" +\n        \"Facilis est reprehenderit cupiditate consequatur totam officiis tempor\" +\n        \"Facilis bus, aut dolor molestiae consequatur totam officiis tempor\" +\n        \"Facilis est reprehenderit cupiditate consequatur totam officiis tempor\" +\n        \"dolores molestias alias.Voluptatibus, aut dolor molestiae ullam accusantium\" +\n        \"error atque veniam libero obcaecati!\"\n    },\n    {\n        id: 3,\n        author: \"Sam\",\n        title: \"Hello World!\",\n        content: \"Lorem ipsum dolor sit amet consectetur adipisicing elit.\" +\n        \"Facilis est reprehenderit cupiditate cbus, aut dolor molestiae tempor\" +\n        \"Facilis est reprehenderit cupiditate consequatur totam officiis tempor\" +\n        \"Facilis bus, aut dolor molestiae consequatur totam officiis tempor\" +\n        \"Facilis est reprehenderit cupiditate consequatur totam officiis tempor\" +\n        \"dolores molestias alias.Voluptatibus, aut dolor molestiae ullam accusantium\" +\n        \"error atque veniam libero obcaecati!\"\n    },\n    {\n        id: 4,\n        author: \"Jose\",\n        title: \"Hot dogs are great, here's why\",\n        content: \"Lorem ipsum dolor sit amet consectetur adipisicing elit.\" +\n        \"Facilis est reprehenderit cupiditate cbus, aut dolor molestiae tempor\" +\n        \"Facilis est reprehenderit cupiditate consequatur totam officiis tempor\" +\n        \"Facilis bus, aut dolor molestiae consequatur totam officiis tempor\" +\n        \"Facilis est reprehenderit cupiditate consequatur totam officiis tempor\" +\n        \"dolores molestias alias.Voluptatibus, aut dolor molestiae ullam accusantium\" +\n        \"error atque veniam libero obcaecati!\"\n    },\n    {\n        id: 5,\n        author: \"Chris\",\n        title: \"Why Marvel is better than DC\",\n        content: \"Lorem ipsum dolor sit amet consectetur adipisicing elit.\" +\n        \"Facilis est reprehenderit cupiditate cbus, aut dolor molestiae tempor\" +\n        \"Facilis est reprehenderit cupiditate consequatur totam officiis tempor\" +\n        \"Facilis bus, aut dolor molestiae consequatur totam officiis tempor\" +\n        \"Facilis est reprehenderit cupiditate consequatur totam officiis tempor\" +\n        \"dolores molestias alias.Voluptatibus, aut dolor molestiae ullam accusantium\" +\n        \"error atque veniam libero obcaecati!\"\n    },\n    {\n        id: 6,\n        author: \"Karina\",\n        title: \"Top Python projects\",\n        content: \"Lorem ipsum dolor sit amet consectetur adipisicing elit.\" +\n        \"Facilis est reprehenderit cupiditate cbus, aut dolor molestiae tempor\" +\n        \"Facilis est reprehenderit cupiditate consequatur totam officiis tempor\" +\n        \"Facilis bus, aut dolor molestiae consequatur totam officiis tempor\" +\n        \"Facilis est reprehenderit cupiditate consequatur totam officiis tempor\" +\n        \"dolores molestias alias.Voluptatibus, aut dolor molestiae ullam accusantium\" +\n        \"error atque veniam libero obcaecati!\"\n    },\n    {\n        id: 7,\n        author: \"Todd\",\n        title: \"Top tips for your resume\",\n        content: \"Lorem ipsum dolor sit amet consectetur adipisicing elit.\" +\n        \"Facilis est reprehenderit cupiditate cbus, aut dolor molestiae tempor\" +\n        \"Facilis est reprehenderit cupiditate consequatur totam officiis tempor\" +\n        \"Facilis bus, aut dolor molestiae consequatur totam officiis tempor\" +\n        \"Facilis est reprehenderit cupiditate consequatur totam officiis tempor\" +\n        \"dolores molestias alias.Voluptatibus, aut dolor molestiae ullam accusantium\" +\n        \"error atque veniam libero obcaecati!\"\n    },\n    {\n        id: 8,\n        author: \"Maria\",\n        title: \"How to build an amazing portfolio.\",\n        content: \"Lorem ipsum dolor sit amet consectetur adipisicing elit.\" +\n        \"Facilis est reprehenderit cupiditate cbus, aut dolor molestiae tempor\" +\n        \"Facilis est reprehenderit cupiditate consequatur totam officiis tempor\" +\n        \"Facilis bus, aut dolor molestiae consequatur totam officiis tempor\" +\n        \"Facilis est reprehenderit cupiditate consequatur totam officiis tempor\" +\n        \"dolores molestias alias.Voluptatibus, aut dolor molestiae ullam accusantium\" +\n        \"error atque veniam libero obcaecati!\"\n    },\n    {\n        id: 9,\n        author: \"Alex\",\n        title: \"Iphone vs. Android\",\n        content: \"Lorem ipsum dolor sit amet consectetur adipisicing elit.\" +\n        \"Facilis est reprehenderit cupiditate cbus, aut dolor molestiae tempor\" +\n        \"Facilis est reprehenderit cupiditate consequatur totam officiis tempor\" +\n        \"Facilis bus, aut dolor molestiae consequatur totam officiis tempor\" +\n        \"Facilis est reprehenderit cupiditate consequatur totam officiis tempor\" +\n        \"dolores molestias alias.Voluptatibus, aut dolor molestiae ullam accusantium\" +\n        \"error atque veniam libero obcaecati!\"\n    },\n    {\n        id: 10,\n        author: \"Wendy\",\n        title: \"College is where I found myself, here's why.\",\n        content: \"Lorem ipsum dolor sit amet consectetur adipisicing elit.\" +\n        \"Facilis est reprehenderit cupiditate cbus, aut dolor molestiae tempor\" +\n        \"Facilis est reprehenderit cupiditate consequatur totam officiis tempor\" +\n        \"Facilis bus, aut dolor molestiae consequatur totam officiis tempor\" +\n        \"Facilis est reprehenderit cupiditate consequatur totam officiis tempor\" +\n        \"dolores molestias alias.Voluptatibus, aut dolor molestiae ullam accusantium\" +\n        \"error atque veniam libero obcaecati!\"\n    },\n    {\n        id: 11,\n        author: \"Steven\",\n        title: \"Why Kotlin is better than Java\",\n        content: \"Lorem ipsum dolor sit amet consectetur adipisicing elit.\" +\n        \"Facilis est reprehenderit cupiditate cbus, aut dolor molestiae tempor\" +\n        \"Facilis est reprehenderit cupiditate consequatur totam officiis tempor\" +\n        \"Facilis bus, aut dolor molestiae consequatur totam officiis tempor\" +\n        \"Facilis est reprehenderit cupiditate consequatur totam officiis tempor\" +\n        \"dolores molestias alias.Voluptatibus, aut dolor molestiae ullam accusantium\" +\n        \"error atque veniam libero obcaecati!\"\n    },\n    {\n        id: 12,\n        author: \"Janet\",\n        title: \"Earthquakes in California\",\n        content: \"Lorem ipsum dolor sit amet consectetur adipisicing elit.\" +\n        \"Facilis est reprehenderit cupiditate cbus, aut dolor molestiae tempor\" +\n        \"Facilis est reprehenderit cupiditate consequatur totam officiis tempor\" +\n        \"Facilis bus, aut dolor molestiae consequatur totam officiis tempor\" +\n        \"Facilis est reprehenderit cupiditate consequatur totam officiis tempor\" +\n        \"dolores molestias alias.Voluptatibus, aut dolor molestiae ullam accusantium\" +\n        \"error atque veniam libero obcaecati!\"\n    },\n    {\n        id: 13,\n        author: \"Sue\",\n        title: \"What you need in order to become a developer\",\n        content: \"Lorem ipsum dolor sit amet consectetur adipisicing elit.\" +\n        \"Facilis est reprehenderit cupiditate cbus, aut dolor molestiae tempor\" +\n        \"Facilis est reprehenderit cupiditate consequatur totam officiis tempor\" +\n        \"Facilis bus, aut dolor molestiae consequatur totam officiis tempor\" +\n        \"Facilis est reprehenderit cupiditate consequatur totam officiis tempor\" +\n        \"dolores molestias alias.Voluptatibus, aut dolor molestiae ullam accusantium\" +\n        \"error atque veniam libero obcaecati!\"\n    },\n    {\n        id: 14,\n        author: \"Joshua\",\n        title: \"Buy my stuff\",\n        content: \"Lorem ipsum dolor sit amet consectetur adipisicing elit.\" +\n        \"Facilis est reprehenderit cupiditate cbus, aut dolor molestiae tempor\" +\n        \"Facilis est reprehenderit cupiditate consequatur totam officiis tempor\" +\n        \"Facilis bus, aut dolor molestiae consequatur totam officiis tempor\" +\n        \"Facilis est reprehenderit cupiditate consequatur totam officiis tempor\" +\n        \"dolores molestias alias.Voluptatibus, aut dolor molestiae ullam accusantium\" +\n        \"error atque veniam libero obcaecati!\"\n    },\n    {\n        id: 15,\n        author: \"Steven\",\n        title: \"Why Kotlin is better than Java\",\n        content: \"Lorem ipsum dolor sit amet consectetur adipisicing elit.\" +\n        \"Facilis est reprehenderit cupiditate cbus, aut dolor molestiae tempor\" +\n        \"Facilis est reprehenderit cupiditate consequatur totam officiis tempor\" +\n        \"Facilis bus, aut dolor molestiae consequatur totam officiis tempor\" +\n        \"Facilis est reprehenderit cupiditate consequatur totam officiis tempor\" +\n        \"dolores molestias alias.Voluptatibus, aut dolor molestiae ullam accusantium\" +\n        \"error atque veniam libero obcaecati!\"\n    },\n    {\n        id: 16,\n        author: \"Noah\",\n        title: \"The end is coming!\",\n        content: \"Lorem ipsum dolor sit amet consectetur adipisicing elit.\" +\n        \"Facilis est reprehenderit cupiditate cbus, aut dolor molestiae tempor\" +\n        \"Facilis est reprehenderit cupiditate consequatur totam officiis tempor\" +\n        \"Facilis bus, aut dolor molestiae consequatur totam officiis tempor\" +\n        \"Facilis est reprehenderit cupiditate consequatur totam officiis tempor\" +\n        \"dolores molestias alias.Voluptatibus, aut dolor molestiae ullam accusantium\" +\n        \"error atque veniam libero obcaecati!\"\n    },\n    {\n        id: 17,\n        author: \"Max\",\n        title: \"Benefits of taking a cold shower\",\n        content: \"Lorem ipsum dolor sit amet consectetur adipisicing elit.\" +\n        \"Facilis est reprehenderit cupiditate cbus, aut dolor molestiae tempor\" +\n        \"Facilis est reprehenderit cupiditate consequatur totam officiis tempor\" +\n        \"Facilis bus, aut dolor molestiae consequatur totam officiis tempor\" +\n        \"Facilis est reprehenderit cupiditate consequatur totam officiis tempor\" +\n        \"dolores molestias alias.Voluptatibus, aut dolor molestiae ullam accusantium\" +\n        \"error atque veniam libero obcaecati!\"\n    },\n    {\n        id: 18,\n        author: \"Jess\",\n        title: \"Ways to stay alert without coffee\",\n        content: \"Lorem ipsum dolor sit amet consectetur adipisicing elit.\" +\n        \"Facilis est reprehenderit cupiditate cbus, aut dolor molestiae tempor\" +\n        \"Facilis est reprehenderit cupiditate consequatur totam officiis tempor\" +\n        \"Facilis bus, aut dolor molestiae consequatur totam officiis tempor\" +\n        \"Facilis est reprehenderit cupiditate consequatur totam officiis tempor\" +\n        \"dolores molestias alias.Voluptatibus, aut dolor molestiae ullam accusantium\" +\n        \"error atque veniam libero obcaecati!\"\n    },\n    {\n        id: 19,\n        author: \"Cesar\",\n        title: \"New technologies for machine learning\",\n        content: \"Lorem ipsum dolor sit amet consectetur adipisicing elit.\" +\n        \"Facilis est reprehenderit cupiditate cbus, aut dolor molestiae tempor\" +\n        \"Facilis est reprehenderit cupiditate consequatur totam officiis tempor\" +\n        \"Facilis bus, aut dolor molestiae consequatur totam officiis tempor\" +\n        \"Facilis est reprehenderit cupiditate consequatur totam officiis tempor\" +\n        \"dolores molestias alias.Voluptatibus, aut dolor molestiae ullam accusantium\" +\n        \"error atque veniam libero obcaecati!\"\n    },\n    {\n        id: 20,\n        author: \"Nancy\",\n        title: \"Some Title\",\n        content: \"Lorem ipsum dolor sit amet consectetur adipisicing elit.\" +\n        \"Facilis est reprehenderit cupiditate cbus, aut dolor molestiae tempor\" +\n        \"Facilis est reprehenderit cupiditate consequatur totam officiis tempor\" +\n        \"Facilis bus, aut dolor molestiae consequatur totam officiis tempor\" +\n        \"Facilis est reprehenderit cupiditate consequatur totam officiis tempor\" +\n        \"dolores molestias alias.Voluptatibus, aut dolor molestiae ullam accusantium\" +\n        \"error atque veniam libero obcaecati!\"\n    },\n    {\n        id: 21,\n        author: \"Larry\",\n        title: \"Now Hiring!\",\n        content: \"Lorem ipsum dolor sit amet consectetur adipisicing elit.\" +\n        \"Facilis est reprehenderit cupiditate cbus, aut dolor molestiae tempor\" +\n        \"Facilis est reprehenderit cupiditate consequatur totam officiis tempor\" +\n        \"Facilis bus, aut dolor molestiae consequatur totam officiis tempor\" +\n        \"Facilis est reprehenderit cupiditate consequatur totam officiis tempor\" +\n        \"dolores molestias alias.Voluptatibus, aut dolor molestiae ullam accusantium\" +\n        \"error atque veniam libero obcaecati!\"\n    },\n    {\n        id: 22,\n        author: \"Sergey\",\n        title: \"Google I/O 2019 Recap\",\n        content: \"Lorem ipsum dolor sit amet consectetur adipisicing elit.\" +\n        \"Facilis est reprehenderit cupiditate cbus, aut dolor molestiae tempor\" +\n        \"Facilis est reprehenderit cupiditate consequatur totam officiis tempor\" +\n        \"Facilis bus, aut dolor molestiae consequatur totam officiis tempor\" +\n        \"Facilis est reprehenderit cupiditate consequatur totam officiis tempor\" +\n        \"dolores molestias alias.Voluptatibus, aut dolor molestiae ullam accusantium\" +\n        \"error atque veniam libero obcaecati!\"\n    },\n    {\n        id: 23,\n        author: \"Mark\",\n        title: \"Why you should trust Facebook\",\n        content: \"Lorem ipsum dolor sit amet consectetur adipisicing elit.\" +\n        \"Facilis est reprehenderit cupiditate cbus, aut dolor molestiae tempor\" +\n        \"Facilis est reprehenderit cupiditate consequatur totam officiis tempor\" +\n        \"Facilis bus, aut dolor molestiae consequatur totam officiis tempor\" +\n        \"Facilis est reprehenderit cupiditate consequatur totam officiis tempor\" +\n        \"dolores molestias alias.Voluptatibus, aut dolor molestiae ullam accusantium\" +\n        \"error atque veniam libero obcaecati!\"\n    },\n    {\n        id: 24,\n        author: \"Elon\",\n        title: \"Electric cars are the future\",\n        content: \"Lorem ipsum dolor sit amet consectetur adipisicing elit.\" +\n        \"Facilis est reprehenderit cupiditate cbus, aut dolor molestiae tempor\" +\n        \"Facilis est reprehenderit cupiditate consequatur totam officiis tempor\" +\n        \"Facilis bus, aut dolor molestiae consequatur totam officiis tempor\" +\n        \"Facilis est reprehenderit cupiditate consequatur totam officiis tempor\" +\n        \"dolores molestias alias.Voluptatibus, aut dolor molestiae ullam accusantium\" +\n        \"error atque veniam libero obcaecati!\"\n    },\n    {\n        id: 25,\n        author: \"Steve\",\n        title: \"Why Kotlin is better than Java\",\n        content: \"Lorem ipsum dolor sit amet consectetur adipisicing elit.\" +\n        \"Facilis est reprehenderit cupiditate cbus, aut dolor molestiae tempor\" +\n        \"Facilis est reprehenderit cupiditate consequatur totam officiis tempor\" +\n        \"Facilis bus, aut dolor molestiae consequatur totam officiis tempor\" +\n        \"Facilis est reprehenderit cupiditate consequatur totam officiis tempor\" +\n        \"dolores molestias alias.Voluptatibus, aut dolor molestiae ullam accusantium\" +\n        \"error atque veniam libero obcaecati!\"\n    },\n    {\n        id: 26,\n        author: \"Jack\",\n        title: \"We're hiring\",\n        content: \"Lorem ipsum dolor sit amet consectetur adipisicing elit.\" +\n        \"Facilis est reprehenderit cupiditate cbus, aut dolor molestiae tempor\" +\n        \"Facilis est reprehenderit cupiditate consequatur totam officiis tempor\" +\n        \"Facilis bus, aut dolor molestiae consequatur totam officiis tempor\" +\n        \"Facilis est reprehenderit cupiditate consequatur totam officiis tempor\" +\n        \"dolores molestias alias.Voluptatibus, aut dolor molestiae ullam accusantium\" +\n        \"error atque veniam libero obcaecati!\"\n    },\n    {\n        id: 27,\n        author: \"Cristian\",\n        title: \"Help Wanted\",\n        content: \"Lorem ipsum dolor sit amet consectetur adipisicing elit.\" +\n        \"Facilis est reprehenderit cupiditate cbus, aut dolor molestiae tempor\" +\n        \"Facilis est reprehenderit cupiditate consequatur totam officiis tempor\" +\n        \"Facilis bus, aut dolor molestiae consequatur totam officiis tempor\" +\n        \"Facilis est reprehenderit cupiditate consequatur totam officiis tempor\" +\n        \"dolores molestias alias.Voluptatibus, aut dolor molestiae ullam accusantium\" +\n        \"error atque veniam libero obcaecati!\"\n    },\n    {\n        id: 28,\n        author: \"Carlos\",\n        title: \"Get started with Haskell\",\n        content: \"Lorem ipsum dolor sit amet consectetur adipisicing elit.\" +\n        \"Facilis est reprehenderit cupiditate cbus, aut dolor molestiae tempor\" +\n        \"Facilis est reprehenderit cupiditate consequatur totam officiis tempor\" +\n        \"Facilis bus, aut dolor molestiae consequatur totam officiis tempor\" +\n        \"Facilis est reprehenderit cupiditate consequatur totam officiis tempor\" +\n        \"dolores molestias alias.Voluptatibus, aut dolor molestiae ullam accusantium\" +\n        \"error atque veniam libero obcaecati!\"\n    },\n    {\n        id: 29,\n        author: \"Josh\",\n        title: \"Top 5 technologies for Web Developers\",\n        content: \"Lorem ipsum dolor sit amet consectetur adipisicing elit.\" +\n        \"Facilis est reprehenderit cupiditate cbus, aut dolor molestiae tempor\" +\n        \"Facilis est reprehenderit cupiditate consequatur totam officiis tempor\" +\n        \"Facilis bus, aut dolor molestiae consequatur totam officiis tempor\" +\n        \"Facilis est reprehenderit cupiditate consequatur totam officiis tempor\" +\n        \"dolores molestias alias.Voluptatibus, aut dolor molestiae ullam accusantium\" +\n        \"error atque veniam libero obcaecati!\"\n    },\n  ]\n\nexport {articles};","import React from 'react';\nimport './CardComponent.css'\n\nclass CardComponent extends React.Component {\n    /**\n     * This component is only going to display data that is\n     * passed in to its props object.\n     */\n    render() {\n        return (\n            <div className=\"card\">\n                <div className=\"title-container\">\n                    <p className=\"title\">{this.props.title}</p>\n                </div>\n\n                <div className=\"author-container\">\n                    <p className=\"author\">Author: {this.props.author}</p>\n                </div>\n\n                <div className=\"content-container\">\n                    <div className=\"line\"></div>\n                    <p>{this.props.content}</p>\n                </div>    \n            </div>\n        )\n    }\n\n}\n\nexport default CardComponent;","import React from 'react';\nimport './PageNav.css';\n\nclass PageNavComponent extends React.Component {\n\n    /*\n        current is used to figure out which button is currently selected.\n        Binding the onClick listeners is required to that the methods know \n        what \"this\" (PageNavComponent instance) is referring to.\n    */\n    constructor(props) {\n        super(props);\n        this.state = {\n            current: 0,\n            currentButtons: this.getInitialButtons(),\n        }\n        \n        this.handleClick = this.handleClick.bind(this);\n        this.incrementButton = this.incrementButton.bind(this);\n        this.decrementButton = this.decrementButton.bind(this);\n    }\n\n    /*\n        Create buttons based on the numOfArticles and the number of articlesPerPage.\n        If the numbOfArticles has a remainder, add an extra button.\n    */\n    getNumOfButtons() {\n        let numOfButtons = Math.floor(this.props.numOfArticles / this.props.articlesPerPage);\n        const hasRemainder = this.props.numOfArticles % this.props.articlesPerPage !== 0;\n\n        if(hasRemainder) {\n            numOfButtons++;\n        }\n\n        return numOfButtons;\n    }\n\n    /*\n        Gets the initial set of buttons. If numOfButtons > 5 then we grab the first\n        5 buttons, because we want to display 5 at a time if possible.\n    */\n    getInitialButtons() {\n        let buttonNums = [];\n        const numOfButtons = this.getNumOfButtons();\n\n        if(numOfButtons > 5) {\n            buttonNums.push(0,1,2,3,4);\n        } else {\n            for(let i = 0; i < this.getNumOfButtons(); i++){\n                buttonNums.push(i);\n            }\n        }\n\n        return buttonNums;\n    }\n    \n\n    createButton(buttonIndex, isSelected) {\n        return(\n            // buttonIndex starts at 0 (Which is why we add 1)\n            <button \n                key={buttonIndex}\n                onClick={() => this.handleClick(buttonIndex)}\n                className={isSelected ? 'highlighted' : null}\n            >\n                {buttonIndex + 1}\n            </button>\n        );\n    }\n\n\n    handleClick(buttonIndex) {\n        /*\n            Update the index of the last article that's displayed.\n            This is sent to App component's updateArticles() to update\n            the next set of articles displayed.\n        */\n        const lastArticleIndex = (buttonIndex + 1) * this.props.articlesPerPage;\n        this.props.onClick(lastArticleIndex);\n\n        let updatedCurrentButtons = [];\n        const numOfButtons = this.getNumOfButtons();\n        /* \n            We're using 5 here bc we only want to display a maximum of 5 buttons\n            before using Next and Prev buttons.\n        */ \n        if(buttonIndex < numOfButtons - 5) {\n            /*\n                The selected button will be the first of 5 buttons displayed.\n                If numOfbuttons < 5, then the else-if statement will be executed.\n            */\n            for(let i = 0; i < 5; i++) {\n                updatedCurrentButtons.push(buttonIndex + i);\n            }\n        } else if (buttonIndex >= numOfButtons - 5) {\n            /*\n                If buttonIndex is within the last 5 possible buttons,\n                then updatedCurrentButtons will display the last 5 buttons.\n\n                However, if numOfButtons < 5, then we use the old \n                currentButtons because we can't grab the last\n                5 buttons (Bc there's not enough buttons to grab).\n                numOfButtons decreases as the articlesPerPages increases.\n                \n            */\n            if(numOfButtons < 5) {\n                // Use old currentButtons.\n                updatedCurrentButtons = this.state.currentButtons;\n            } else {\n                // Display the last 5 buttons.\n                const fifthToLast = numOfButtons - 5;\n                for(let i = 0; i < 5; i++) {\n                    updatedCurrentButtons.push(fifthToLast + i);\n                }\n            }   \n        }\n        \n        this.setState({\n            current: buttonIndex,\n            currentButtons: updatedCurrentButtons,\n        });\n    }\n\n\n    /*\n        Increment/Update \"currentButtons\" by 1. However, if we're already displaying the \n        last 5 buttons. Then only update \"current\".\n    */\n    incrementButton() {\n        const updatedCurrentButtons = this.state.currentButtons.map(x => x + 1);\n        const updatedCurrent = this.state.current + 1;\n\n        /* \n            Using updatedCurrent, call the callback in our props object.\n            This will execute App component's updateArticle()\n        */\n        const lastArticleIndex = (updatedCurrent + 1) * this.props.articlesPerPage;\n        this.props.onClick(lastArticleIndex);\n\n        if(this.state.current < this.getNumOfButtons() - 5) {\n            this.setState({\n                current: updatedCurrent,\n                currentButtons: updatedCurrentButtons,\n            });\n        } else {\n            this.setState({\n                current: updatedCurrent,\n            });\n        }    \n    }\n\n\n    /*  \n        Similar to incrementButton(), except we decrement currentButtons by 1.\n        However, if the first element in updatedCurrentButtons is -1, then we only\n        update \"current\".\n    */\n    decrementButton() {\n        const updatedCurrentButtons = this.state.currentButtons.map(x => x - 1);\n        const updatedCurrent = this.state.current - 1;\n\n        const lastArticleIndex = (updatedCurrent + 1) * this.props.articlesPerPage;\n        this.props.onClick(lastArticleIndex);\n\n        if(updatedCurrentButtons[0] === -1) {\n            this.setState({\n                current: updatedCurrent,\n            }); \n        } else {\n            this.setState({\n                current: updatedCurrent,\n                currentButtons: updatedCurrentButtons,\n            });\n        }\n    }\n\n\n    render() {\n        let navButtons = [];\n        /*\n            Display the \"Prev\" button if we're not on the first button.\n            We're using -1 as a key bc no other button will be using it as its key.\n        */\n        if(this.state.current !== 0) {\n            navButtons.push(\n                <button key={-1} onClick={this.decrementButton}>Prev</button>\n            );\n        }\n           \n        // Dynamically create buttons based on currentButtons \n        this.state.currentButtons.forEach(index => {\n            if(index === this.state.current) {\n                // Currently selected button (Pass true)\n                navButtons.push(this.createButton(index, true));\n            } else {\n                navButtons.push(this.createButton(index, false));\n            }\n        });\n\n        /*\n            Display the \"Next\" button if we're not on the last button.\n            We're using -1 as a key bc no other button will be using it as its key.\n        */\n        if(this.state.current !== (this.getNumOfButtons() - 1)) {\n            navButtons.push(\n                <button key={-2} onClick={this.incrementButton}>Next</button>\n            );\n        }\n\n        return (\n            <div>\n                {navButtons}\n            </div>\n        )\n    }\n}\n\nexport default PageNavComponent;","import React from 'react';\nimport './App.css';\nimport { articles } from './articles.js'\nimport CardComponent from './CardComponent';\nimport PageNavComponent from './PageNavComponent';\n\nclass App extends React.Component {\n  // Initialize values in constructor.\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      numOfArticles: articles.length,\n      firstArticleIndex: 0,\n      /* \n        If the number of articles is greater than articlesPerPage, then\n        get first set of articles. Else, get what we can.\n      */\n      lastArticleIndex: (\n        (articles.length > this.props.articlesPerPage) ? \n          this.props.articlesPerPage : articles.length - 1),\n    }\n\n    this.updateArticles = this.updateArticles.bind(this);\n  }\n\n  /*\n    This callback will be sent PageNavComponent as a prop.\n    Once the user clicks on a button (to navigate to another set of articles),\n    this callback will recieve the index of the last article in the set and update\n    firstArticleIndex and lastArticleIndex accordingly. \n\n    Calling this.setState() tells React to call render() again, since there's been a change\n    in the component's state. This will ultimately update currentArticles in render();\n  */\n  updateArticles(lastIndex) {\n    this.setState({\n      firstArticleIndex: lastIndex - this.props.articlesPerPage,\n      lastArticleIndex: lastIndex\n    });\n  }\n\n  render() {\n    // Use slice() NOT splice(). The latter modifies the original array (articles).\n    let currentArticles = articles.slice(this.state.firstArticleIndex,\n      this.state.lastArticleIndex);\n\n    let cards = currentArticles.map((article) => {\n      return (\n        <CardComponent\n          key={article.id}\n          title={article.title}\n          author={article.author}\n          content={article.content}\n        />\n      );\n    });\n\n    return (\n      <div className=\"App\">\n\n        <div className=\"cards\">\n          {cards}\n        </div>\n\n        <div className=\"page-nav\">\n          <PageNavComponent\n            numOfArticles={this.state.numOfArticles}\n            onClick={i => this.updateArticles(i)}\n            articlesPerPage={this.props.articlesPerPage}\n          />\n        </div>\n      </div>\n    )\n  }\n};\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App articlesPerPage={8}/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}